!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACTION_CARRY	common/datatype.h	70;"	d
ACTION_KICK	common/datatype.h	69;"	d
ACTION_STOP	common/datatype.h	71;"	d
Aspeed	common/datatype.h	/^struct Aspeed{$/;"	s
BLACK	common/color.h	12;"	d
BLUE	common/color.h	20;"	d
BallStatus	common/datatype.h	/^struct BallStatus{$/;"	s
Bpoint	common/datatype.h	/^struct Bpoint{$/;"	s
CHAT_ACK	common/datatype.h	101;"	d
CHAT_FIN	common/datatype.h	99;"	d
CHAT_FUNC	common/datatype.h	104;"	d
CHAT_HEART	common/datatype.h	100;"	d
CHAT_MSG	common/datatype.h	103;"	d
CHAT_SYS	common/datatype.h	105;"	d
CHAT_WALL	common/datatype.h	102;"	d
ChatMsg	common/datatype.h	/^struct ChatMsg{$/;"	s
Ctl	common/datatype.h	/^struct Ctl {$/;"	s
DBG	common/common.h	16;"	d
DBG	common/common.h	18;"	d
FT_ACK	common/datatype.h	83;"	d
FT_CTL	common/datatype.h	84;"	d
FT_FIN	common/datatype.h	88;"	d
FT_GAME	common/datatype.h	85;"	d
FT_GAMEOVER	common/datatype.h	87;"	d
FT_HEART	common/datatype.h	80;"	d
FT_MSG	common/datatype.h	82;"	d
FT_SCORE	common/datatype.h	86;"	d
FT_WALL	common/datatype.h	81;"	d
FootBallMsg	common/datatype.h	/^struct FootBallMsg{$/;"	s
GREEN	common/color.h	16;"	d
L_BLACK	common/color.h	13;"	d
L_BLUE	common/color.h	21;"	d
L_GREEN	common/color.h	17;"	d
L_PINK	common/color.h	22;"	d
L_RED	common/color.h	15;"	d
L_YELLOW	common/color.h	19;"	d
LogRequest	common/datatype.h	/^struct  LogRequest {$/;"	s
LogResponse	common/datatype.h	/^struct LogResponse{$/;"	s
MAX	common/datatype.h	11;"	d
MAX_MSG	common/datatype.h	66;"	d
Map	common/datatype.h	/^struct Map{$/;"	s
NONE	common/color.h	11;"	d
NTHREAD	common/datatype.h	12;"	d
PINK	common/color.h	23;"	d
Point	common/datatype.h	/^struct Point {$/;"	s
RED	common/color.h	14;"	d
Score	common/datatype.h	/^struct Score {$/;"	s
Speed	common/datatype.h	/^struct Speed{$/;"	s
User	common/datatype.h	/^struct User {$/;"	s
YELLOW	common/color.h	18;"	d
_CLIENT_RECV_H	common/client_recv.h	9;"	d
_COLOR_H	common/color.h	9;"	d
_COMMON_H	common/common.h	9;"	d
_DATATYPE_H	common/datatype.h	9;"	d
_HEAD_H	common/head.h	9;"	d
_STORE_SCORE_H	common/store_score.h	9;"	d
_SUB_REACTOR_H	common/sub_reactor.h	9;"	d
_THREAD_POOL_H	common/thread_pool.h	9;"	d
_UDP_CLIENT_H	common/udp_client.h	9;"	d
_UDP_EPOLL_H	common/udp_epoll.h	9;"	d
_UDP_SERVER_H	common/udp_server.h	9;"	d
a	common/datatype.h	/^    struct Aspeed a;$/;"	m	struct:BallStatus	typeref:struct:BallStatus::Aspeed
action	common/datatype.h	/^    int action;$/;"	m	struct:Ctl
add_event_ptr	common/udp_epoll.c	/^void add_event_ptr(int epollfd, int fd, int events, struct User *user){$/;"	f
add_to_sub_reactor	common/udp_epoll.c	/^void add_to_sub_reactor(struct User *user){$/;"	f
ball	server/server.c	/^struct Bpoint ball; \/\/球的位置$/;"	v	typeref:struct:Bpoint
ball_status	server/server.c	/^struct BallStatus ball_status; \/\/球的状态$/;"	v	typeref:struct:BallStatus
bepollfd	common/udp_epoll.c	/^int repollfd, bepollfd;$/;"	v
bepollfd	server/server.c	/^int repollfd, bepollfd;$/;"	v
blue	common/datatype.h	/^    int blue;$/;"	m	struct:Score
bteam	common/udp_epoll.c	/^struct User *rteam, *bteam;$/;"	v	typeref:struct:
bteam	server/server.c	/^struct User *rteam, *bteam;$/;"	v	typeref:struct:
check_online	common/udp_epoll.c	/^int check_online(struct LogRequest *request){$/;"	f
cond	common/thread_pool.h	/^    pthread_cond_t cond;$/;"	m	struct:task_queue
conf	client/client.c	/^char *conf = ".\/football.conf";$/;"	v
conf	server/server.c	/^char *conf = ".\/footballd.conf";$/;"	v
conf_ans	common/data.c	/^char conf_ans[50] = {0};$/;"	v
court	server/server.c	/^struct Map court;$/;"	v	typeref:struct:Map
ctl	common/datatype.h	/^    struct Ctl ctl;$/;"	m	struct:FootBallMsg	typeref:struct:FootBallMsg::Ctl
del_event	common/udp_epoll.c	/^void del_event(int epollfd, int fd){$/;"	f
dirx	common/datatype.h	/^    int dirx;$/;"	m	struct:Ctl
diry	common/datatype.h	/^    int diry;$/;"	m	struct:Ctl
do_recv	common/client_recv.c	/^void *do_recv(void *arg)$/;"	f
do_work	common/thread_pool.c	/^void do_work(struct User *user){$/;"	f
epollfd	common/thread_pool.h	/^    int epollfd; \/\/从反应堆$/;"	m	struct:task_queue
fd	common/datatype.h	/^    int fd; \/\/该玩家对应的连接$/;"	m	struct:User
find_sub	common/udp_epoll.c	/^int find_sub(struct User *team){$/;"	f
flag	common/datatype.h	/^    int flag; \/\/未响应次数$/;"	m	struct:User
gate_height	common/datatype.h	/^    int gate_height;$/;"	m	struct:Map
gate_width	common/datatype.h	/^    int gate_width;$/;"	m	struct:Map
get_conf_value	common/common.c	/^char *get_conf_value(const char *path, const char *key) {$/;"	f
head	common/thread_pool.h	/^    int head;$/;"	m	struct:task_queue
height	common/datatype.h	/^    int height;$/;"	m	struct:Map
loc	common/datatype.h	/^    struct Point loc;$/;"	m	struct:User	typeref:struct:User::Point
logout	client/client.c	/^void logout(int signum){$/;"	f
main	client/client.c	/^int main(int argc, char **argv) {$/;"	f
main	server/server.c	/^int main(int argc, char **argv) {$/;"	f
make_block	common/common.c	/^void make_block(int fd) {$/;"	f
make_non_block	common/common.c	/^void make_non_block(int fd) {$/;"	f
msg	common/datatype.h	/^    char msg[1024];$/;"	m	struct:ChatMsg
msg	common/datatype.h	/^    char msg[512];$/;"	m	struct:LogRequest
msg	common/datatype.h	/^    char msg[512];$/;"	m	struct:LogResponse
msg	common/datatype.h	/^    char msg[MAX_MSG];$/;"	m	struct:FootBallMsg
mutex	common/thread_pool.h	/^    pthread_mutex_t mutex;$/;"	m	struct:task_queue
name	common/datatype.h	/^    char name[20];$/;"	m	struct:BallStatus
name	common/datatype.h	/^    char name[20];$/;"	m	struct:ChatMsg
name	common/datatype.h	/^    char name[20];$/;"	m	struct:FootBallMsg
name	common/datatype.h	/^    char name[20];$/;"	m	struct:LogRequest
name	common/datatype.h	/^    char name[20];$/;"	m	struct:User
online	common/datatype.h	/^    int online;\/\/ 1 在线 0 不在线$/;"	m	struct:User
port	common/udp_epoll.c	/^int port = 0;$/;"	v
port	server/server.c	/^int port = 0;$/;"	v
red	common/datatype.h	/^    int red;$/;"	m	struct:Score
repollfd	common/udp_epoll.c	/^int repollfd, bepollfd;$/;"	v
repollfd	server/server.c	/^int repollfd, bepollfd;$/;"	v
rteam	common/udp_epoll.c	/^struct User *rteam, *bteam;$/;"	v	typeref:struct:User
rteam	server/server.c	/^struct User *rteam, *bteam;$/;"	v	typeref:struct:User
score	server/server.c	/^struct Score score;$/;"	v	typeref:struct:Score
server_ip	client/client.c	/^char server_ip[20] = {0};$/;"	v
server_port	client/client.c	/^int server_port = 0;$/;"	v
size	common/datatype.h	/^    int size;$/;"	m	struct:FootBallMsg
socket_create	common/common.c	/^int socket_create(int port) {$/;"	f
socket_create_udp	common/udp_server.c	/^int socket_create_udp(int port) {$/;"	f
socket_udp	common/udp_client.c	/^int socket_udp() {$/;"	f
sockfd	client/client.c	/^int sockfd = -1;$/;"	v
start	common/datatype.h	/^    struct Point start;$/;"	m	struct:Map	typeref:struct:Map::Point
store_score	common/store_score.c	/^void store_score(char *testname, char *id, char *name, char *ip, double score) {$/;"	f
strength	common/datatype.h	/^    int strength; \/\/踢球力度$/;"	m	struct:Ctl
sub_reactor	common/sub_reactor.c	/^void *sub_reactor(void *arg){$/;"	f
sum	common/thread_pool.h	/^    int sum;$/;"	m	struct:task_queue
tail	common/thread_pool.h	/^    int tail;$/;"	m	struct:task_queue
task_queue	common/thread_pool.h	/^struct task_queue {$/;"	s
task_queue_init	common/thread_pool.c	/^void task_queue_init(struct task_queue *taskQueue, int sum, int epollfd) {$/;"	f
task_queue_pop	common/thread_pool.c	/^struct User *task_queue_pop(struct task_queue *taskQueue) {$/;"	f
task_queue_push	common/thread_pool.c	/^void task_queue_push(struct task_queue *taskQueue, struct User *user) {$/;"	f
team	common/datatype.h	/^    int team; \/\/ 0 RED  1 BLUE$/;"	m	struct:User
team	common/datatype.h	/^    int team;$/;"	m	struct:FootBallMsg
team	common/datatype.h	/^    int team;$/;"	m	struct:LogRequest
team	common/thread_pool.h	/^    struct User **team;$/;"	m	struct:task_queue	typeref:struct:task_queue::User
thread_run	common/thread_pool.c	/^void *thread_run(void *arg) {$/;"	f
timestamp	common/store_score.c	/^long timestamp() {$/;"	f
type	common/datatype.h	/^    int type;  \/\/ type & FT_HEART$/;"	m	struct:FootBallMsg
type	common/datatype.h	/^    int type; \/\/ 0 OK 1 NO$/;"	m	struct:LogResponse
type	common/datatype.h	/^    int type;$/;"	m	struct:ChatMsg
udp_accept	common/udp_epoll.c	/^int udp_accept(int fd, struct User *user) {$/;"	f
udp_connect	common/udp_epoll.c	/^int udp_connect(struct sockaddr_in *client) {$/;"	f
v	common/datatype.h	/^    struct Speed v;$/;"	m	struct:BallStatus	typeref:struct:BallStatus::Speed
who	common/datatype.h	/^    int who;\/\/which队伍$/;"	m	struct:BallStatus
width	common/datatype.h	/^    int width;$/;"	m	struct:Map
x	common/datatype.h	/^    double x;$/;"	m	struct:Aspeed
x	common/datatype.h	/^    double x;$/;"	m	struct:Bpoint
x	common/datatype.h	/^    double x;$/;"	m	struct:Speed
x	common/datatype.h	/^    int x;$/;"	m	struct:Point
y	common/datatype.h	/^    double y;$/;"	m	struct:Aspeed
y	common/datatype.h	/^    double y;$/;"	m	struct:Bpoint
y	common/datatype.h	/^    double y;$/;"	m	struct:Speed
y	common/datatype.h	/^    int y;$/;"	m	struct:Point
